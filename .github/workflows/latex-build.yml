name: Build Beamer Presentation

on:
  push:
    branches:
      - main
    paths:
      - 'presentation/prezentace.tex'
  pull_request:
    branches:
      - main
    paths:
      - 'presentation/prezentace.tex'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Install minimal TeX Live packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            texlive-latex-base \
            texlive-latex-recommended \
            texlive-fonts-recommended \
            texlive-latex-extra \
            texlive-lang-czechslovak

      - name: Clean previous build files
        run: rm -f presentation/*.pdf presentation/*.aux presentation/*.log

      - name: Compile Beamer Presentation
        run: |
          pdflatex -output-directory=presentation presentation/prezentace.tex
          pdflatex -output-directory=presentation presentation/prezentace.tex

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: beamer-presentation
          path: presentation/prezentace.pdf

      - name: Generate Tag Name
        id: tag_name
        run: |
          echo "TAG_NAME=v$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV
          echo "TAG_NAME=v$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Create Release via GitHub API (only on push to main)
        if: github.ref == 'refs/heads/main'
        run: |
          # Create release via GitHub API
          release_response=$(curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"tag_name":"${{ env.TAG_NAME }}","name":"Presentation ${{ env.TAG_NAME }}","draft":false,"prerelease":false}' \
            https://api.github.com/repos/${{ github.repository }}/releases)

          # Extract the upload URL from the response
          upload_url=$(echo $release_response | jq -r '.upload_url' | sed 's/{?name,label}//')

          # Upload the PDF file to the release
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @presentation/prezentace.pdf \
            "$upload_url?name=prezentace.pdf&label=prezentace.pdf"

      - name: Post PR Comment with Artifact Link (only on pull request)
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            :page_facing_up: The generated PDF presentation is available as an artifact.
            [Download PDF](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts)